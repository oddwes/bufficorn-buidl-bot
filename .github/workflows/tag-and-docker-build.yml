name: Auto Tag and Docker Build

on:
  push:
    branches:
      - main

jobs:
  tag-and-build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest version and bump
        id: version
        run: |
          latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          major=$(echo $latest_tag | cut -d. -f1 | tr -d 'v')
          minor=$(echo $latest_tag | cut -d. -f2)
          patch=$(echo $latest_tag | cut -d. -f3)
          new_patch=$((patch + 1))
          new_tag="v$major.$minor.$new_patch"
          echo "NEW_TAG=$new_tag" >> $GITHUB_OUTPUT

      - name: Create tag
        uses: actions/github-script@v7
        with:
          script: |
            const tag = '${{ steps.version.outputs.NEW_TAG }}'
            const sha = context.sha

            await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: `refs/tags/${tag}`,
              sha: sha
            })

      - name: Create .env file
        run: |
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> .env
          echo "ANTHROPIC_API_KEY=${{ secrets.ANTHROPIC_API_KEY }}" >> .env
          echo "SCHEDULE_PASSWORD=${{ secrets.SCHEDULE_PASSWORD }}" >> .env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build and export
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          load: true
          tags: |
            berlin/eliza:latest
            berlin/eliza:${{ steps.version.outputs.NEW_TAG }}
            438465133266.dkr.ecr.us-east-2.amazonaws.com/unicorn:latest
            438465133266.dkr.ecr.us-east-2.amazonaws.com/unicorn:${{ steps.version.outputs.NEW_TAG }}

      - name: Push to ECR
        run: |
          docker push 438465133266.dkr.ecr.us-east-2.amazonaws.com/unicorn:latest
          docker push 438465133266.dkr.ecr.us-east-2.amazonaws.com/unicorn:${{ steps.version.outputs.NEW_TAG }}

      - name: Force new ECS deployment
        run: |
          aws ecs update-service --cluster YOUR_CLUSTER_NAME --service YOUR_SERVICE_NAME --force-new-deployment --region us-east-2